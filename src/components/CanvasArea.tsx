import { useRef, forwardRef, useImperativeHandle } from 'react'
import { AppState, Play } from '../types'
import FootballCanvas from './FootballCanvas'
import Konva from 'konva'

interface CanvasAreaProps {
  appState: AppState
  updateAppState: (updates: Partial<AppState>) => void
  onUpdatePlay: (updates: Partial<Play>) => void
  onNewPlay?: () => void
  isSaving?: boolean
  lastSavedAt?: Date | null
  onUndo?: () => void
  onRedo?: () => void
}

export interface CanvasAreaRef {
  exportAsImage: () => void
  print: () => void
}

const CanvasArea = forwardRef<CanvasAreaRef, CanvasAreaProps>(({ 
  appState, 
  updateAppState, 
  onUpdatePlay,
  onNewPlay,
  isSaving,
  lastSavedAt,
  onUndo,
  onRedo
}, ref) => {
  const stageRef = useRef<Konva.Stage>(null)

  useImperativeHandle(ref, () => ({
    exportAsImage: () => {
      if (stageRef.current) {
        const dataURL = stageRef.current.toDataURL({ pixelRatio: 2 })
        const link = document.createElement('a')
        link.download = `${appState.currentPlay?.metadata.title || 'football-play'}.png`
        link.href = dataURL
        document.body.appendChild(link)
        link.click()
        document.body.removeChild(link)
      }
    },
    print: () => {
      console.log('üñ®Ô∏è „Éó„É™„É≥„ÉàÊ©üËÉΩÈñãÂßã')
      
      if (!stageRef.current) {
        console.error('üñ®Ô∏è „Ç®„É©„Éº: stageRef.current„Åånull')
        alert('„Ç≠„É£„É≥„Éê„Çπ„ÅåÂàùÊúüÂåñ„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì„ÄÇ„Åó„Å∞„Çâ„ÅèÂæÖ„Å£„Å¶„Åã„ÇâÂÜçË©¶Ë°å„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ')
        return
      }

      if (!appState.currentPlay) {
        console.error('üñ®Ô∏è „Ç®„É©„Éº: currentPlay„Åånull')
        alert('„Éó„É¨„Ç§„ÅåÈÅ∏Êäû„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì„ÄÇ')
        return
      }

      console.log('üñ®Ô∏è Konva StageÁô∫Ë¶ã:', stageRef.current)
      console.log('üñ®Ô∏è StageÂπÖ:', stageRef.current.width())
      console.log('üñ®Ô∏è StageÈ´ò„Åï:', stageRef.current.height())

      try {
        // È´òËß£ÂÉèÂ∫¶„Åß„Ç≠„É£„É≥„Éê„Çπ„ÇíÁîªÂÉèÂåñ
        const dataURL = stageRef.current.toDataURL({ 
          pixelRatio: 2,
          mimeType: 'image/png',
          quality: 1.0
        })
        
        console.log('üñ®Ô∏è DataURLÁîüÊàêÊàêÂäü:', dataURL.substring(0, 100) + '...')
        
        if (!dataURL || dataURL === 'data:,') {
          console.error('üñ®Ô∏è „Ç®„É©„Éº: Á©∫„ÅÆdataURL')
          alert('„Ç≠„É£„É≥„Éê„Çπ„ÅÆÁîªÂÉèÂåñ„Å´Â§±Êïó„Åó„Åæ„Åó„Åü„ÄÇ„Éó„É¨„Ç§„Å´„Ç≥„É≥„ÉÜ„É≥„ÉÑ„Åå„ÅÇ„Çã„Åì„Å®„ÇíÁ¢∫Ë™ç„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ')
          return
        }

        // „Éó„É¨„Ç§„Éá„Éº„ÇøÂèñÂæó
        const play = appState.currentPlay
        const metadata = play.metadata
        const allTextBoxEntries = play.textBoxEntries || []
        
        // Á©∫„ÅÆ„Ç®„É≥„Éà„É™„ÇíÈô§Â§ñÔºàshortText„Åæ„Åü„ÅØlongText„ÅÆ„ÅÑ„Åö„Çå„Åã„ÅåÂ≠òÂú®„Åô„Çã„ÇÇ„ÅÆ„ÅÆ„ÅøÔºâ
        const textBoxEntries = allTextBoxEntries.filter(entry => 
          entry.shortText?.trim() || entry.longText?.trim()
        )
        
        console.log('üñ®Ô∏è „Éó„É¨„Ç§„Éá„Éº„ÇøË©≥Á¥∞Á¢∫Ë™ç:')
        console.log('  - title:', metadata.title || '(Á©∫)')
        console.log('  - ÂÖ®textBoxEntries:', allTextBoxEntries.length, 'ÂÄã')
        console.log('  - Ë®òÂÖ•Ê∏à„ÅøtextBoxEntries:', textBoxEntries.length, 'ÂÄã')
        textBoxEntries.forEach((entry, index) => {
          console.log(`    [${index + 1}] ${entry.shortText || '(Á©∫)'} : ${entry.longText || '(Á©∫)'}`)
        })

        // Âç∞Âà∑„É¢„Éº„Éâ„ÅßÂÆüË°å
        console.log('üñ®Ô∏è Âç∞Âà∑„É¢„Éº„ÉâÈñãÂßã')
        openPrintPreview(dataURL, metadata, textBoxEntries)

      } catch (error) {
        console.error('üñ®Ô∏è „Éó„É™„É≥„ÉàÂá¶ÁêÜ‰∏≠„Ç®„É©„Éº:', error)
        alert(`Âç∞Âà∑Âá¶ÁêÜ‰∏≠„Å´„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü: ${error}`)
      }
    }
  }))

  // Âç∞Âà∑„Éó„É¨„Éì„É•„ÉºÈñ¢Êï∞
  const openPrintPreview = (dataURL: string, metadata: any, textBoxEntries: any[]) => {
    console.log('üñ®Ô∏è openPrintPreviewÈñãÂßã')
    
    // „Çà„ÇäÁ¢∫ÂÆü„Å™Float/inline-block„Éô„Éº„Çπ„ÅÆ„É¨„Ç§„Ç¢„Ç¶„Éà
    const printHTML = `
      <!DOCTYPE html>
      <html>
        <head>
          <title>„Éó„É™„É≥„Éà - ${metadata.title || 'Football Play'}</title>
          <meta charset="UTF-8">
          <style>
            * { 
              margin: 0; 
              padding: 0; 
              box-sizing: border-box; 
            }
            
            body { 
              font-family: Arial, sans-serif; 
              line-height: 1.4;
              color: #333;
              background: white;
              /* Ê®™Âêë„ÅçA4„Çµ„Ç§„Ç∫ÂØæÂøú */
              width: 297mm;
              margin: 0 auto;
              padding: 8mm;
            }
            
            .print-container {
              width: 100%;
              max-width: 281mm; /* Ê®™Âêë„ÅçA4„Éë„Éá„Ç£„É≥„Ç∞ËÄÉÊÖÆ */
              margin: 0 auto;
              background: white;
            }
            
            .title-section {
              width: 100%;
              text-align: center;
              border-bottom: 2px solid #333;
              padding-bottom: 8px;
              margin-bottom: 15px;
            }
            
            .title-section h1 {
              font-size: 20px;
              font-weight: bold;
              color: #333;
              margin-bottom: 4px;
            }
            
            .subtitle {
              font-size: 12px;
              color: #666;
            }
            
            /* Â∑¶Âè≥ÈÖçÁΩÆ„É¨„Ç§„Ç¢„Ç¶„ÉàÔºàÊ®™Âêë„ÅçA4ÊúÄÈÅ©ÂåñÔºâ */
            .content-area {
              width: 100%;
              display: flex;
              gap: 10mm;
              align-items: flex-start;
            }
            
            .canvas-section {
              flex: 2;
              max-width: 200mm;
              text-align: center;
            }
            
            .canvas-section img {
              width: 100%;
              max-width: 200mm;
              max-height: 140mm;
              height: auto;
              border: 1px solid #ddd;
              box-shadow: 0 1px 3px rgba(0,0,0,0.1);
              object-fit: contain;
            }
            
            .notes-section {
              flex: 1;
              max-width: 80mm;
              padding: 6px;
              border: 2px solid #007bff;
              background: #f8f9fa;
              min-height: 140mm;
            }
            
            .notes-title {
              font-size: 12px;
              font-weight: bold;
              color: #333;
              margin-bottom: 6px;
              text-align: center;
              border-bottom: 1px solid #ddd;
              padding-bottom: 3px;
            }
            
            .notes-grid {
              display: block;
              margin-top: 6px;
            }
            
            .notes-item {
              margin-bottom: 3px;
              padding: 4px;
              background: white;
              border-left: 2px solid #007bff;
              min-height: 18px;
              break-inside: avoid;
            }
            
            .notes-item-label {
              font-weight: bold;
              font-size: 8px;
              color: #555;
              margin-bottom: 1px;
              display: block;
            }
            
            .notes-item-content {
              font-size: 7px;
              color: #333;
              line-height: 1.2;
              min-height: 10px;
            }
            
            .notes-placeholder {
              font-style: italic;
              color: #999;
            }
            
            .tags {
              display: block;
            }
            
            .tag {
              display: inline-block;
              background: #e3f2fd;
              color: #1976d2;
              padding: 1px 3px;
              margin: 1px;
              border-radius: 6px;
              font-size: 6px;
              font-weight: 500;
            }
            
            
            /* Âç∞Âà∑ÊôÇÂ∞ÇÁî®CSS */
            @media print {
              body { 
                -webkit-print-color-adjust: exact; 
                print-color-adjust: exact;
                margin: 0;
                padding: 8mm;
                size: A4 landscape; /* Ê®™Âêë„ÅçA4ÊåáÂÆö */
              }
              
              .print-container {
                margin: 0;
                page-break-inside: avoid;
              }
              
              .content-area {
                display: flex !important;
                gap: 10mm !important;
                align-items: flex-start !important;
              }
              
              .canvas-section {
                flex: 2 !important;
                max-width: 200mm !important;
              }
              
              .notes-section {
                flex: 1 !important;
                max-width: 80mm !important;
                background: #f8f9fa !important;
                border: 2px solid #007bff !important;
                page-break-inside: avoid;
              }
            }
            
          </style>
        </head>
        <body>
          
          <div class="print-container">
            <div class="title-section">
              <h1>${metadata.title || 'Football Play'}</h1>
              <div class="subtitle">${metadata.playName || ''} ${metadata.playType ? `(${metadata.playType})` : ''}</div>
            </div>
            
            <div class="content-area">
              <div class="canvas-section">
                <img src="${dataURL}" alt="Football Play Diagram" />
              </div>
              
              <div class="notes-section">
                <div class="notes-title">Note</div>
                
                ${textBoxEntries.map((entry, index) => `
                  <div class="notes-item">
                    <div class="notes-item-label">${index + 1}</div>
                    <div class="notes-item-content">
                      <div style="display: flex; gap: 4px; align-items: flex-start;">
                        <div style="min-width: 20px; font-weight: bold; color: #007bff; flex-shrink: 0;">
                          ${entry.shortText?.trim() || ''}
                        </div>
                        <div style="flex: 1; word-break: break-word;">
                          ${entry.longText?.trim() || ''}
                        </div>
                      </div>
                    </div>
                  </div>
                `).join('')}
                
                ${textBoxEntries.length === 0 ? `
                  <div class="notes-item">
                    <div class="notes-item-content">
                      <span class="notes-placeholder">„É°„É¢„ÅåË®òÂÖ•„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì</span>
                    </div>
                  </div>
                ` : ''}
              </div>
            </div>
          </div>
        </body>
      </html>
    `

    console.log('üñ®Ô∏è HTMLÁîüÊàêÂÆå‰∫Ü (ÊñáÂ≠óÊï∞:', printHTML.length, ')')
    console.log('üñ®Ô∏è HTMLÂÜÖÂÆπÁ¢∫Ë™çÔºàÊúÄÂàù„ÅÆ800ÊñáÂ≠óÔºâ:', printHTML.substring(0, 800))
    
    // Âç∞Âà∑„Ç¶„Ç£„É≥„Éâ„Ç¶„ÇíÈñã„Åè
    const printWindow = window.open('', '_blank')
    if (!printWindow) {
      console.error('üñ®Ô∏è „Ç®„É©„Éº: printWindow‰ΩúÊàêÂ§±Êïó')
      alert('Âç∞Âà∑„Ç¶„Ç£„É≥„Éâ„Ç¶„ÇíÈñã„Åë„Åæ„Åõ„Çì„Åß„Åó„Åü„ÄÇ„Éù„ÉÉ„Éó„Ç¢„ÉÉ„Éó„Éñ„É≠„ÉÉ„Ç´„Éº„ÇíÁ¢∫Ë™ç„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ')
      return
    }

    console.log('üñ®Ô∏è Âç∞Âà∑„Ç¶„Ç£„É≥„Éâ„Ç¶„Å´HTMLÊõ∏„ÅçËæº„ÅøÈñãÂßã')
    printWindow.document.write(printHTML)
    printWindow.document.close()
    
    console.log('üñ®Ô∏è HTMLÊõ∏„ÅçËæº„ÅøÂÆå‰∫Ü')

    // Â∞ë„ÅóÂæÖ„Å£„Å¶„Åã„ÇâÂç∞Âà∑„ÉÄ„Ç§„Ç¢„É≠„Ç∞„ÇíÈñã„Åè
    setTimeout(() => {
      console.log('üñ®Ô∏è Âç∞Âà∑„ÉÄ„Ç§„Ç¢„É≠„Ç∞„ÇíÈñã„ÅÑ„Å¶„ÅÑ„Åæ„Åô...')
      printWindow.focus()
      printWindow.print()
    }, 1500) // 1.5ÁßíÂæÖÊ©ü„ÅßÁ¢∫ÂÆü„Å´Ë™≠„ÅøËæº„ÅøÂÆå‰∫Ü

    console.log('üñ®Ô∏è openPrintPreviewÂÆå‰∫Ü')
  }

  if (!appState.currentPlay) {
    return (
      <div className="canvas-container flex items-center justify-center">
        <div className="text-center text-gray-500">
          <div className="text-6xl mb-4">üèà</div>
          <h2 className="text-xl font-semibold mb-2">Football Canvas „Å∏„Çà„ÅÜ„Åì„Åù</h2>
          <p className="text-gray-600 mb-4">
            Êñ∞„Åó„ÅÑ„Éó„É¨„Ç§„Çí‰ΩúÊàê„Åó„Å¶„ÄÅ„Ç¢„É°„É™„Ç´„É≥„Éï„ÉÉ„Éà„Éú„Éº„É´„ÅÆ„Çµ„Ç§„É≥„ÇíÊèè„Åç„Åæ„Åó„Çá„ÅÜ
          </p>
          <button
            onClick={onNewPlay}
            className="px-6 py-3 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors"
          >
            Êñ∞„Åó„ÅÑ„Éó„É¨„Ç§„Çí‰ΩúÊàê
          </button>
        </div>
      </div>
    )
  }

  return (
    <div className="canvas-container">
      {/* „ÉÑ„Éº„É´„Éê„Éº */}
      <div className="absolute top-4 left-4 z-10 bg-white border border-gray-300 rounded-lg shadow-lg p-2">
        <div className="flex items-center space-x-2">
          <button
            onClick={onUndo}
            disabled={!onUndo || appState.historyIndex <= 0}
            className="w-8 h-8 flex items-center justify-center border border-gray-300 rounded hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed"
            title="ÂÖÉ„Å´Êàª„Åô (Ctrl+Z)"
          >
            ‚Ü∂
          </button>
          <button
            onClick={onRedo}
            disabled={!onRedo || appState.historyIndex >= appState.history.length - 1}
            className="w-8 h-8 flex items-center justify-center border border-gray-300 rounded hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed"
            title="„ÇÑ„ÇäÁõ¥„Åó (Ctrl+Y)"
          >
            ‚Ü∑
          </button>
        </div>
      </div>

      {/* Konva„Éô„Éº„Çπ„ÅÆ„Ç≠„É£„É≥„Éê„Çπ */}
      <FootballCanvas
        play={appState.currentPlay}
        appState={appState}
        updateAppState={updateAppState}
        onUpdatePlay={onUpdatePlay}
        onUndo={onUndo}
        onRedo={onRedo}
        ref={stageRef}
      />

      {/* „Çª„Ç∞„É°„É≥„Éà‰∏äÈôêË≠¶Âëä */}
      {appState.segmentLimitWarning && (
        <div className="absolute top-4 left-1/2 transform -translate-x-1/2 bg-red-500 text-white px-4 py-2 rounded-lg shadow-lg z-50">
          <div className="flex items-center space-x-2">
            <span>‚ö†Ô∏è</span>
            <span className="text-sm">{appState.segmentLimitWarning}</span>
          </div>
        </div>
      )}

      {/* Âè≥‰∏ã„ÅÆ„Çπ„ÉÜ„Éº„Çø„ÇπË°®Á§∫ */}
      <div className="absolute bottom-4 right-4 bg-white border border-gray-300 rounded-lg shadow-lg p-2">
        <div className="text-xs text-gray-600 space-y-1">
          <div>„ÉÑ„Éº„É´: {appState.selectedTool}</div>
          <div>„Éó„É¨„Ç§„É§„Éº: {appState.currentPlay.players.length}‰∫∫</div>
          <div>Áü¢Âç∞: {appState.currentPlay.arrows.length}Êú¨</div>
          <div>„ÉÜ„Ç≠„Çπ„Éà: {appState.currentPlay.texts.length}ÂÄã</div>
          <div>Â±•Ê≠¥: {appState.historyIndex + 1}/{appState.history.length}</div>
          {appState.selectedElementIds.length > 0 && (
            <div>ÈÅ∏Êäû: {appState.selectedElementIds.length}ÂÄã</div>
          )}
          {appState.isDrawingArrow && (
            <div className="text-blue-600 font-semibold space-y-1">
              <div>Áü¢Âç∞ÊèèÁîª‰∏≠... ({Math.floor(appState.currentArrowPoints.length / 2)}ÁÇπ)</div>
              <div>„Çª„Ç∞„É°„É≥„Éà: {appState.currentArrowSegments.length} / {appState.maxSegments}</div>
              <div className="text-xs space-y-1">
                <div>„ÇØ„É™„ÉÉ„ÇØ: ÁÇπËøΩÂä† | „ÉÄ„Éñ„É´„ÇØ„É™„ÉÉ„ÇØ: ÂÆå‰∫Ü</div>
                <div>Backspace: ÊúÄÂæåÂâäÈô§ | Esc: ÂÖ®ÂâäÈô§</div>
              </div>
            </div>
          )}
          {appState.isEditingText && (
            <div className="text-green-600 font-semibold space-y-1">
              <div>„ÉÜ„Ç≠„Çπ„ÉàÁ∑®ÈõÜ‰∏≠... (ID: {appState.editingTextId?.slice(-6)})</div>
              <div className="text-xs">„Çµ„Ç§„Éâ„Éê„Éº„ÅßÁ∑®ÈõÜ | ‰øùÂ≠ò: ÈÅ©Áî® | „Ç≠„É£„É≥„Çª„É´: Á†¥Ê£Ñ</div>
            </div>
          )}
          
          {/* Ëá™Âãï‰øùÂ≠ò„Çπ„ÉÜ„Éº„Çø„Çπ */}
          {appState.currentPlay && (
            <div className="border-t border-gray-200 pt-2 mt-2">
              <div className="flex items-center space-x-2">
                {isSaving ? (
                  <>
                    <div className="w-2 h-2 bg-yellow-500 rounded-full animate-pulse"></div>
                    <span className="text-xs text-yellow-600">‰øùÂ≠ò‰∏≠...</span>
                  </>
                ) : lastSavedAt ? (
                  <>
                    <div className="w-2 h-2 bg-green-500 rounded-full"></div>
                    <span className="text-xs text-green-600">
                      Ëá™Âãï‰øùÂ≠òÊ∏à„Åø ({lastSavedAt.toLocaleTimeString()})
                    </span>
                  </>
                ) : (
                  <>
                    <div className="w-2 h-2 bg-gray-400 rounded-full"></div>
                    <span className="text-xs text-gray-500">Êú™‰øùÂ≠ò</span>
                  </>
                )}
              </div>
            </div>
          )}
        </div>
      </div>
    </div>
  )
})

CanvasArea.displayName = 'CanvasArea'

export default CanvasArea